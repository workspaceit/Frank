<?phpclass m_trait_categories extends CI_Model{	function __construct(){		parent::__construct();	}	function insertRow($rowData){		if($this->db->insert('trait_categories',$rowData))			return true;		return false;	}	function updateRow($rowData,$category)	{		$this->db->where('category',$category);		if($this->db->update('trait_categories',$rowData))			return true;		return false;	}	function updateRow_by_id($rowData,$id)	{		$this->db->where('id',$id);		if($this->db->update('trait_categories',$rowData))			return true;		return false;	}	function updateRow_subcategory($rowData,$id)	{		$this->db->where('id',$id);		if($this->db->update('trait_categories',$rowData))			return true;		return false;	}	function update_picture_by_category($rowData,$id)	{		echo $id;		$this->db->where('id',$id);		if($this->db->update('trait_categories',$rowData))			return true;		return false;	}	function get_traits_all(){		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->order_by('category','desc');		return $this->db->get()->result();	}	function get_default_id(){		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->where('user_type',1);		$this->db->order_by('category','desc');		return $this->db->get()->result();	}	//From m_trait_users	function get_all_by_user_id($user_id){		$sql="  select				trait_users.id,				trait_users.trait_categories_id,				trait_users.category,				trait_users.sub_category_value,				trait_users.sub_category_hidden,				trait_users.sub_category_avg_point,				trait_categories.color_class				from				trait_users				inner join trait_categories on (				trait_users.trait_categories_id = trait_categories.id				 				)				where				user_id = ".$user_id."						order by category desc						";		return $this->db->query($sql)->result();	}	function get_all(){		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->order_by('id','asc');		return $this->db->get()->result();	}		function get_all_by_usertype($user_type=1){		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->where('user_type',$user_type);		$this->db->order_by('id','asc');		return $this->db->get()->result();	}		function get_all_by_id($id){		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->where('id',$id);		$this->db->limit(1);		return $this->db->get()->result();	}	function get_lower_picture_by_id($id)	{		$this->db->select('lower_pic_path');		$this->db->from('trait_categories');		$this->db->where('id',$id);		$this->db->limit(1);		foreach( $this->db->get()->result() as $rowData){			return $rowData->lower_pic_path;		}		return "";	}	function get_upper_picture_by_id($id)	{		$this->db->select('upper_pic_path');		$this->db->from('trait_categories');		$this->db->where('id',$id);		$this->db->limit(1);		foreach( $this->db->get()->result() as $rowData){			return $rowData->upper_pic_path;		}		return "";	}	function get_traits_all_order_by_sub_category(){		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->order_by('sub_category','asc');		return $this->db->get()->result();	}	function get_sub_category_by_id($id){		$this->db->select('sub_category');		$this->db->from('trait_categories');		$this->db->where('id',$id);		$this->db->limit(1);		foreach ($this->db->get()->result() as $rowData){			return $rowData->sub_category;		}		return "";	}	function get_id_by_category_sub_category($category,$sub_category)	{		$this->db->select('id');		$this->db->from('trait_categories');		$this->db->where('category',$category);		$this->db->where('sub_category',$sub_category);		foreach ( $this->db->get()->result() as $row)		{			return $row->id;		}		return "";	}	function get_category_by_id($id)	{		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->where('id',$id);		return $this->db->get()->result();	}	function is_sub_category_exits($category,$sub_category)	{		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->where('category',$category);		$this->db->where('sub_category',$sub_category);		if($this->db->get()->result())		{			return true;		}		else			return false;	}	function is_sub_category_exits_other($id,$category,$sub_category)	{		$this->db->select('*');		$this->db->from('trait_categories');		$this->db->where('id !=',$id);		$this->db->where('category',$category);		$this->db->where('sub_category',$sub_category);		if($this->db->get()->result())		{			return true;		}		else			return false;	}	/**	 * get all mother categories name	 * @return boolean / Object	 */	function get_all_categories(){		$sql = "SELECT DISTINCT category				FROM trait_categories";		 		$queryData = $this->db->query($sql);		 		if ($queryData->num_rows() > 0){			return $queryData->result();		} else {			return false;		}	}		function get_subcategories_in_categories_tree(){		$allCategories = $this->get_all_by_usertype(1);				$categoryTree = array();				if(!empty($allCategories)){			$i=0;			foreach ($allCategories as $key=>$data){				//prd($data);				$categoryTree[$data->category][$i]['main_category'] = $data->category;				$categoryTree[$data->category][$i]['id'] = $data->id;				$categoryTree[$data->category][$i]['sub_category'] = $data->sub_category;								$i++;			}		}				return $categoryTree;	}		function get_alluser_traitcategory_avg(){		$this->load->model('m_trait_users');			$traitList = $this->get_all_categories();		$finalResult = array();		if(!empty($traitList)){			foreach ($traitList as $key=>$data):				$finalResult[$data->category] = $this->m_trait_users->get_trait_avgpoint_by_category($data->category);			endforeach;			 			return $finalResult;		}else {			return false;		}	}	 }