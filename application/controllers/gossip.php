<?phprequire_once dirname(__FILE__)."/FRANK_Auth_Controller.php";class gossip extends FRANK_Auth_Controller {    private $current_confident;    function __construct() {        parent::__construct();        $this->load->helper('url');        $this->pageData = array();        include_once(APPPATH . 'controllers/common_site_setting.php');        include_once(APPPATH . 'controllers/load_common_properties_of_user_for_ajax_request_json.php');        $this->sign_in = FALSE;        $this->sign_up = FALSE;        $this->sign_out = TRUE;        $this->search = TRUE;        $this->home = FALSE;        $this->current_confident = 0;    }    function view() {        $g_id = $_REQUEST['g_id'];        $email = $_REQUEST['email'];        $for = $_REQUEST['for'];        redirect(base_url() . "profile?g_id=" . $g_id . "&email=" . $email . "&for=" . $for);    }    function submit_data() {        $this->load->model('m_developer_gossip_relationship');        $this->load->model('m_developer_gossip_insider');        $this->load->model('m_user_visitor_details');        $this->load->model('m_user_trait_final_values');        //Make Gossip Data        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        require_once dirname(__FILE__) . '/class_file/Profile/C_Profile.php';        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        $gossip_id = "";        $profile_auth = null;        if (isset($_POST['gossip_main_data']) && $this->is_json_obj_null($_POST['gossip_main_data'])) {            $gossip_main_data = json_decode($_POST['gossip_main_data']);            if ($gossip_main_data->gossip_thread_value == "") {                $respond_array['status'] = "false";                $respond_array['element_id'] = "#gossip_thread_value";                $respond_array['msg'] = "Please Enter Gossip Thread Value";                echo json_encode($respond_array);                die();            }            if ($gossip_main_data->gossip_text == "") {                $respond_array['status'] = "false";                $respond_array['element_id'] = "#gossip_text";                $respond_array['msg'] = "Please Enter <span style='color: yellow;'>Gossip Comment<span/>";                echo json_encode($respond_array);                die();            }        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Please clean your browser cache and refresh your page";            echo json_encode($respond_array);            die();        }        $point = 0;        if (isset($_POST['gossip_relationship']) && $this->is_json_obj_null($_POST['gossip_relationship'])) {            $gossip_relationship_data = json_decode($_POST['gossip_relationship']);            $point = $gossip_relationship_data->point;        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Please select a Relationship";            echo json_encode($respond_array);            die();        }        if($point >45){            $profile_auth = $_POST['profile_auth'];            if($profile_auth==""){                $respond_array['status'] = "false";                $respond_array['element_id'] = "";                $respond_array['msg'] = "Please select a Profile Authentication";                echo json_encode($respond_array);                die();            }        }        if (isset($_POST['gossip_intender']) && $this->is_json_obj_null($_POST['gossip_intender'])) {            $gossip_intender_data = json_decode($_POST['gossip_intender']);        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Please select a Gossip Intenders";            echo json_encode($respond_array);            die();        }        if (isset($_POST['trait_data']) && $this->is_json_obj_null($_POST['trait_data'])) {            $trait_data = $this->input->post('trait_data');        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Please select a Trait";            echo json_encode($respond_array);            die();        }        if (isset($_POST['target_id'])) {            $target_id = ($encrypt_tbl_primary_key_obj->get_plain_text(trim($this->input->post('target_id'))));        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "";            echo json_encode($respond_array);            die();        }        if (isset($_POST['receipent_data']) && $this->is_json_obj_null($_POST['receipent_data'])) {            $receipent_data = json_decode($_POST['receipent_data']);        } else {            $receipent_data = array(); // No receipent        }        //Main Gossip Main [db tbl =gossip_main] [ incoming parameters contains Single Row ]        include_once(APPPATH . 'controllers/class_file/c_gossip_main.php');        include_once(APPPATH . 'controllers/class_file/c_gossip_integrity.php');        include_once(APPPATH . 'controllers/class_file/Profile/C_Aggrigates.php');        $c_gossip_main_obj = new c_gossip_main();        $gossipper_id = $this->u_id;        $thread_value = $gossip_main_data->gossip_thread_value;        $view_count = 0;        $total_reply = 0;        /*echo "<pre/>";        print_r($gossipper_id);        print_r($target_id);        print_r($thread_value);        print_r($view_count);        print_r($total_reply);        die;*/        $c_gossip_integrity_obj = new c_gossip_integrity();        $c_gossip_integrity_obj->set_integrity($trait_data);        $c_gossip_main_obj->set_gossipper_id($gossipper_id);        $c_gossip_main_obj->set_target_id($target_id);        $c_gossip_main_obj->set_thread_value($thread_value);        $c_gossip_main_obj->set_view_count($view_count);        $c_gossip_main_obj->set_total_reply($total_reply);        $c_gossip_main_obj->set_integrity($c_gossip_integrity_obj->get_integrity());        if ($c_gossip_main_obj->is_gossip_exist()) {            $respond_array['status'] = "false";            $respond_array['element_id'] = "#gossip_thread_value";            $respond_array['msg'] = "Gossip thread value already been used previously";            echo json_encode($respond_array);            die();        }        if ($c_gossip_main_obj->insert_row_data()) {            $gossip_id = $c_gossip_main_obj->get_current_id_for_make_gossip();            if ($gossip_id == "" || $gossip_id < 0) {                die();            }        } else {            die();        }        unset($c_gossip_main_obj);        //Gossip Comment [db tbl =gossip_main_comment] [ incoming parameters contains Single Row ]        include_once(APPPATH . 'controllers/class_file/c_gossip_main_comments.php');        $c_gossip_main_comments_obj = new c_gossip_main_comments();        $gossip_comment = $gossip_main_data->gossip_text;        $c_gossip_main_comments_obj->set_gossip_id($gossip_id);        $c_gossip_main_comments_obj->set_user_id($gossipper_id);        $c_gossip_main_comments_obj->set_comments($gossip_comment);        if ($c_gossip_main_comments_obj->insert_row_data()) {        } else {        }        unset($c_gossip_main_comments_obj);        //Gossip Traits [db tbl =trait_v_a_value] [ incoming parameters contains Multi-Row ]        include_once(APPPATH . 'controllers/class_file/c_trait_v_a_value.php');        $c_trait_v_a_value_obj = new c_trait_v_a_value();        $c_trait_v_a_value_obj->set_rated_by($this->u_id);        $c_trait_v_a_value_obj->set_gossip_id($gossip_id);        if ($c_trait_v_a_value_obj->submit_multi_row($trait_data, $target_id)) {        } else {            echo "Error on Trait";        }        unset($c_trait_v_a_value_obj);        //Gossip Main Traits [db tbl =trait_v_a_value] [ incoming parameters contains Multi-Row ]        include_once(APPPATH . 'controllers/class_file/c_gossip_main_trait.php');        $c_gossip_main_trait_obj = new c_gossip_main_trait();        $c_gossip_main_trait_obj->set_gossip_id($gossip_id);        if ($c_gossip_main_trait_obj->submit_multi_row($trait_data)) {        } else {        }        //Gossip Relationship [db tbl =gossip_relationship] [ incoming parameters contains Single-Row ]        $gossip_relationship_id = $encrypt_tbl_primary_key_obj->get_plain_text($gossip_relationship_data->id);        $gossip_relationship_value = "";        $gossip_relationship_point = "";        foreach ($this->m_developer_gossip_relationship->get_all_by_id($gossip_relationship_id) as $rowData) {            $gossip_relationship_value = $rowData->value;            $gossip_relationship_point = $rowData->point;        }        include_once(APPPATH . 'controllers/class_file/c_gossip_relationship.php');        $c_gossip_relationship_obj = new c_gossip_relationship();        $c_gossip_relationship_obj->set_gossip_id($gossip_id);        $c_gossip_relationship_obj->set_values($gossip_relationship_value);        $c_gossip_relationship_obj->set_point($gossip_relationship_point);        $c_gossip_relationship_obj->set_created_by($this->u_id);        $c_gossip_relationship_obj->set_profile_auth($profile_auth);        if ($c_gossip_relationship_obj->insert_row_data()) {        } else {        }        unset($c_gossip_relationship_obj);        $gossip_intender_id = $encrypt_tbl_primary_key_obj->get_plain_text($gossip_intender_data->id);        $gossip_intender_data_value = "";        $gossip_intender_data_point = "";        foreach ($this->m_developer_gossip_insider->get_all_by_id($gossip_intender_id) as $rowData) {            $gossip_intender_data_value = $rowData->value;            $gossip_intender_data_point = $rowData->point;        }        //Gossip Intender[aka insider] [db tbl = gossip_insiders] [ incoming parameters contains Single-Row ]        include_once(APPPATH . 'controllers/class_file/c_gossip_insiders.php');        $c_gossip_insiders_obj = new c_gossip_insiders();        $c_gossip_insiders_obj->set_gossip_id($gossip_id);        $c_gossip_insiders_obj->set_point($gossip_intender_data_point);        $c_gossip_insiders_obj->set_values($gossip_intender_data_value);        if ($c_gossip_insiders_obj->insert_row_data()) {        } else {        }        unset($c_gossip_insiders_obj);        //Gossip Insider/Outsider Group        $target_email = $this->m_user_login->get_email_by_id($target_id);        foreach ($receipent_data as $rowData) {            $user_id = $this->m_user_login->get_id_by_email($rowData->email);            if ($user_id != "") {                // Gossip Insider Group                include_once(APPPATH . 'controllers/class_file/c_gossip_insiders_group.php');                $c_gossip_insiders_group_obj = new c_gossip_insiders_group();                $c_gossip_insiders_group_obj->set_gossip_id($gossip_id);                $c_gossip_insiders_group_obj->set_user_id($user_id);                if ($c_gossip_insiders_group_obj->insert_row_data()) {                } else {                }                unset($c_gossip_insiders_group_obj);            } else {                // Gossip Outsider Group                include_once(APPPATH . 'controllers/class_file/c_gossip_outsiders.php');                $c_gossip_outsiders_obj = new c_gossip_outsiders();                $c_gossip_outsiders_obj->set_gossip_id($gossip_id);                $c_gossip_outsiders_obj->set_user_email($rowData->email);                $c_gossip_outsiders_obj->set_name($rowData->name);                if ($c_gossip_outsiders_obj->insert_row_data()) {                } else {                }                unset($c_gossip_outsiders_obj);            }            include_once(APPPATH . 'controllers/class_file/custom_mail.php');            $custom_mail = new custom_mail();            $custom_mail->send_gossip_invitation_mail(                "Dummy",                $rowData->name,                $rowData->email,                base_url() . 'gossip/view?g_id=' . $gossip_id . '&email=' . $target_email . '&for=1'            );            unset($custom_mail);        }        // Profile Authintication        $c_Profile = new  C_Profile($target_id);        $c_Profile->updateProfileAuthintication($profile_auth);        // Increase Popularity        $this->m_user_trait_final_values->increase_popularity($target_id, 1);        $respond_array['status'] = "true";        $respond_array['element_id'] = "";        $respond_array['msg'] = "Success";        $c_aggrigates_obj = new C_Aggrigates();        $c_aggrigates_obj->updateReputation($target_id);        $c_aggrigates_obj->updateRank();        echo json_encode($respond_array);    }    private function is_json_obj_null($paramenter) {        if ($paramenter != "") {            $json_obj = json_decode($paramenter);            if ($json_obj == "") {                return FALSE;            }        } else {            return FALSE;        }        return TRUE;    }    function create_new_trait() {        include_once(APPPATH . 'controllers/class_file/c_trait_categories.php');        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        $catagory = trim($this->input->post('category'));        $sub_catagory = trim($this->input->post('sub_category'));        $trait_dynamic_id = trim($this->input->post('trait_dynamic_id'));        $user_type = 0;        $trait_categories_obj = new c_trait_categories();        $trait_categories_obj->set_category($catagory);        $trait_categories_obj->set_sub_category($sub_catagory);        $trait_categories_obj->set_user_type($user_type);        if ($trait_categories_obj->sub_category_is_exits()) {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Trait already exits";            echo json_encode($respond_array);            die();        } else {            if ($trait_categories_obj->insertRow()) {                $trait_categories_id = $trait_categories_obj->getId_by_category_AND_subcategory();                include_once(APPPATH . 'controllers/class_file/c_trait_q_a.php');                $trait_q_a_obj = new c_trait_q_a();                $i = 100;                while ($i >= -100) {                    $trait_q_a_obj->set_trait_categories_id($trait_categories_id);                    $trait_q_a_obj->set_ques('');                    $trait_q_a_obj->set_ans('');                    $trait_q_a_obj->set_point($i);                    $i = $i - 10;                    $trait_q_a_obj->set_created_by('');                    $trait_q_a_obj->insertRow();                }                $this->pageData['trait_dynamic_id'] = $trait_dynamic_id;                $this->pageData['trait_sub_category'] = $trait_categories_obj->get_sub_category_by_id($trait_categories_id);                $this->pageData['trait_categories_id'] = $encrypt_tbl_primary_key_obj->get_encrypted_code($trait_categories_id);                $this->load->view('get_new_triat_row_view', $this->pageData);            }        }    }    function get_gossip_view_from_invitation_mail() {        if (isset($_REQUEST['gossip_id'])) {            include_once(APPPATH . 'controllers/class_file/c_gossip_main.php');            include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');            $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();            $c_gossip_main_obj = new c_gossip_main();            $this->pageData['encrypt_tbl_primary_key_obj'] = $encrypt_tbl_primary_key_obj;        } else {            die();        }        $this->pageData += $c_gossip_main_obj->get_gossip_row_view_by_target_id("", FALSE, "", "", $_REQUEST['gossip_id']);        $respond_array['status'] = "true";        $respond_array['element_id'] = "";        $respond_array['msg'] = "Success";        $respond_array['content'] = $this->load->view("gossip_rows_view", $this->pageData, TRUE);        echo json_encode($respond_array);    }    function get_gossip_view() {        if (isset($_REQUEST['trait_id']) || isset($_REQUEST['target_u_id'])) {            include_once(APPPATH . 'controllers/class_file/c_gossip_main.php');            include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');            $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();            $c_gossip_main_obj = new c_gossip_main();            if(isset($_POST['offset']) && isset($_POST['limit'])){                if(intval($_POST['offset'])>=0 && intval($_POST['limit'])>=0){                    $c_gossip_main_obj->offset=intval($_POST['offset']);                    $c_gossip_main_obj->limit=intval($_POST['limit']);                }            }            $trait_id = $encrypt_tbl_primary_key_obj->get_plain_text($_REQUEST['trait_id']);            $this->pageData['encrypt_tbl_primary_key_obj'] = $encrypt_tbl_primary_key_obj;        } else {            die();        }        if (isset($_REQUEST['relation_ship'])) {            $relation_ship = $_REQUEST['relation_ship'];        } else {            $relation_ship = "";        }        if (isset($_REQUEST['order'])) {            $order = $_REQUEST['order'];        } else {            $order = 1;        }        if (isset($_REQUEST['person'])) {            $person = $_REQUEST['person'];        } else {            $person = "";        }        if (isset($_REQUEST['gossip_person_id'])) {            $gossip_person_id = $_REQUEST['gossip_person_id'];        } else {            $gossip_person_id = "";        }        if (isset($_REQUEST['type'])) {            $type = $_REQUEST['type'];            if ($type == "for") {                $gossip_from = FALSE;                $now_gossip_from = FALSE;            } else {                $now_gossip_from = TRUE;                $gossip_from = TRUE;            }        }        $u_id = $encrypt_tbl_primary_key_obj->get_plain_text($gossip_person_id);        if ($trait_id != "") {            if ($person != "") {                $this->pageData += $c_gossip_main_obj->get_gossip_row_view_by_target_id($u_id, $gossip_from, $trait_id, $person);            } else {                $this->pageData += $c_gossip_main_obj->get_gossip_row_view_by_target_id($u_id, $gossip_from, $trait_id, "", "", "", $order);            }        } else {            $this->pageData += $c_gossip_main_obj->get_gossip_row_view_by_target_id($u_id);        }        $this->pageData['now_gossip_from'] = $now_gossip_from;       $this->resp["gossipCount"] = $c_gossip_main_obj->gossipCount;       $this->resp["html"] =  $this->load->view("gossip_rows_view", $this->pageData,true);       echo json_encode( $this->resp);       return;    }    function get_gossip_reply_view() {        $this->load->model("m_gossip_main");        $this->load->model("m_user_basic_info");        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        $target_id = "";        $gossiper_id = "";        $person_have_trait = "";        if (isset($_REQUEST['gossip_id']) && $_REQUEST['gossip_id'] != "") {            $gossip_id = $encrypt_tbl_primary_key_obj->get_plain_text(trim($this->input->post('gossip_id')));        } else {            $gossip_id = "";        }        if ($this->m_gossip_main->is_gossip_target_by_id_target_id($gossip_id, $this->u_id)) {            $target_id = $this->m_gossip_main->get_gossipper_id_by_id($gossip_id);            $gossiper_id = $this->u_id;            $person_have_trait = $gossiper_id;        } else {            $target_id = $this->m_gossip_main->get_target_id_by_id($gossip_id);            $gossiper_id = $this->u_id;            $person_have_trait = $target_id;        }        $this->pageData['encrypt_tbl_primary_key_obj'] = $encrypt_tbl_primary_key_obj;        $this->pageData['gossip_person_inf'] = $this->m_gossip_main->get_j_gossip_reply_person_inf($gossiper_id, $target_id);        $this->pageData['gossip_id'] = $gossip_id;        $this->pageData['gossiper_id'] = $gossiper_id;        $this->pageData['target_id'] = $target_id;        $respnse_array = array();        $this->pageData['first_col'] = TRUE;        $this->pageData['second_col'] = FALSE;        $respnse_array['user_inf_box'] = $this->load->view("gossip_reply_view", $this->pageData, TRUE);        $this->pageData['first_col'] = FALSE;        $this->pageData['second_col'] = TRUE;        $respnse_array['reply_inf_box'] = $this->load->view("gossip_reply_view", $this->pageData, TRUE);        echo json_encode($respnse_array);    }    function get_gossip_comment_reply_view() {        $this->load->model("m_gossip_main");        $this->load->model("m_gossip_comments");        $this->load->model("m_user_basic_info");        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        $target_id = "";        $comment_id = "";        $person_have_trait = "";        if (isset($_REQUEST['comment_id']) && $_REQUEST['comment_id'] != "") {            $comment_id = $encrypt_tbl_primary_key_obj->get_plain_text(trim($this->input->post('comment_id')));        } else {            $comment_id = "";            die();        }        $target_id = $this->m_gossip_comments->get_user_id_by_id($comment_id);        $gossiper_id = $this->u_id;        $person_have_trait = $gossiper_id;        $this->pageData['gossip_person_inf'] = $this->m_gossip_main->get_j_gossip_reply_person_inf($gossiper_id, $target_id);        $this->pageData['gossiper_id'] = $gossiper_id;        $this->pageData['target_id'] = $target_id;        $this->pageData['submit_action'] = (string)"submit_gossip_reply(this)";        $this->load->view("gossip_reply_view", $this->pageData);    }    function submit_reply_all_gossip_data() {        $this->load->model("m_gossip_main");        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        include_once(APPPATH . 'controllers/class_file/c_gossip_comments.php');        $c_gossip_comments_obj = new c_gossip_comments();        $gossip_id = '';        $comments = '';        $user_id = $this->u_id;        if (isset($_REQUEST['gossip_id']) && $_REQUEST['gossip_id'] != "") {            $gossip_id = $encrypt_tbl_primary_key_obj->get_plain_text($_REQUEST['gossip_id']);        } else {            $respond_array['status'] = "faild";            $respond_array['element_id'] = "";            $respond_array['msg'] = "";            echo json_encode($respond_array);            die();        }        if (isset($_REQUEST['comments']) && $_REQUEST['comments'] != "") {            $comments = $_REQUEST['comments'];        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "reply_gossip_text";            $respond_array['msg'] = "Reply Field Empty";            echo json_encode($respond_array);            die();        }        // Not Required        //        if(isset($_REQUEST['trait']) && $_REQUEST['trait']!=""){        //           $trait_data= $_REQUEST['trait'];        //        }else{        //           $respond_array['status']="false";        //           $respond_array['element_id']="";        //           $respond_array['msg']="Select at leat one trait";        //           echo json_encode($respond_array);        //           die();        //        }        $c_gossip_comments_obj->set_gossip_id($gossip_id);        $c_gossip_comments_obj->set_user_id($user_id);        $c_gossip_comments_obj->set_comments($comments);        if ($c_gossip_comments_obj->insert_row_data()) {            $respond_array['status'] = "true";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Success";            echo json_encode($respond_array);        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Server Error";            echo json_encode($respond_array);        }        // Increase Popularity        // Not Required        //        include_once(APPPATH.'controllers/class_file/c_trait_v_a_value.php');        //        $c_trait_v_a_value_obj=new c_trait_v_a_value();        //        //        //        //        $target_id=$this->m_gossip_main->get_target_id_by_id($gossip_id);        //        if(intval($this->u_id)==intval($target_id)){        //              $target_id=$this->m_gossip_main->get_gossipper_id_by_id($gossip_id);        //        }        //        $c_trait_v_a_value_obj->set_rated_by($this->u_id);        //        $c_trait_v_a_value_obj->set_gossip_id($gossip_id);        //        $c_trait_v_a_value_obj->set_rated_to($target_id);        //        $c_trait_v_a_value_obj->set_main_comment(1);        //        if($c_trait_v_a_value_obj->submit_multi_row($trait_data,$target_id)){        //        //        }else{        //            echo "Server Error ON trait";        //        }    }    function submit_comment_reply_all_gossip_data() {        $this->load->model("m_gossip_main");        $this->load->model("m_gossip_comments");        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        include_once(APPPATH . 'controllers/class_file/c_gossip_comment_reply.php');        $c_gossip_comment_reply_obj = new c_gossip_comment_reply();        $comment_id = '';        $comments = '';        $user_id = $this->u_id;        if (isset($_REQUEST['comment_id']) && $_REQUEST['comment_id'] != "") {            $comment_id = $encrypt_tbl_primary_key_obj->get_plain_text($_REQUEST['comment_id']);        } else {            $respond_array['status'] = "faild";            $respond_array['element_id'] = "";            $respond_array['msg'] = "";            echo json_encode($respond_array);            die();        }        if (isset($_REQUEST['comments']) && $_REQUEST['comments'] != "") {            $comments = $_REQUEST['comments'];        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "reply_gossip_text";            $respond_array['msg'] = "Reply Field Empty";            echo json_encode($respond_array);            die();        }        if (isset($_REQUEST['trait']) && $_REQUEST['trait'] != "") {            $trait_data = $_REQUEST['trait'];        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Select at leat one trait";            echo json_encode($respond_array);            die();        }        $c_gossip_comment_reply_obj->set_comments_id($comment_id);        $c_gossip_comment_reply_obj->set_user_id($user_id);        $c_gossip_comment_reply_obj->set_comments($comments);        if ($c_gossip_comment_reply_obj->insert_row_data()) {            $respond_array['status'] = "true";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Success";            echo json_encode($respond_array);        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Server Error";            echo json_encode($respond_array);        }        unset($c_gossip_comment_reply_obj);        //Not Required For ther Version        //        include_once(APPPATH.'controllers/class_file/c_trait_v_a_value.php');        //        $c_trait_v_a_value_obj=new c_trait_v_a_value();        //        //        //        //        $target_id=$this->m_gossip_comments->get_user_id_by_id($comment_id);        //        $gossip_id=$this->m_gossip_comments->get_gossip_id_by_id($comment_id);        //        //        $c_trait_v_a_value_obj->set_rated_by($this->u_id);        //        $c_trait_v_a_value_obj->set_gossip_id($gossip_id);        //        $c_trait_v_a_value_obj->set_rated_to($target_id);        //        if($c_trait_v_a_value_obj->submit_multi_row($trait_data,$target_id)){        //        //        }else{        //            echo "Server Error ON trait";        //        }    }    function get_gossip_comments() {        $this->load->model('m_gossip_comments');        $this->load->model('m_trait_users_gossip');        $this->load->model('m_gossip_comment_reply');        $this->load->model('m_user_basic_info');        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        if (isset($_REQUEST['gossip_id']) && $_REQUEST['gossip_id'] != "") {            $gossip_id = $encrypt_tbl_primary_key_obj->get_plain_text($_REQUEST['gossip_id']);        } else {            die();        }        $gossip_comments_array = $this->m_gossip_comments->get_all_by_gossip_id($gossip_id);        $comment_user_inf = array();        $comment_text = array();        $comment_like = array();        $comment_user_id = array();        $comment_created_date = array();        $comment_created_time = array();        $comment_id = array();        $comment_reply = array();        $view_reply = array();        $i = 0;        //Have Extract the value here and put it to array        //Because at view the design is column-wise not not row-wise,        //therefore prepareing the data in array to print it in column        foreach ($gossip_comments_array as $rowData) {            $comment_user_inf[$i] = $this->m_user_basic_info->get_j_comment_user_inf_by_u_id($rowData->user_id);            $comment_text[$i] = $rowData->comments;            $comment_like[$i] = $rowData->avg_like;            $comment_user_id[$i] = $rowData->user_id;            $temp_date = new DateTime($rowData->created_date);            $comment_created_date[$i] = $temp_date->format("m/d/Y");            $comment_created_time[$i] = $temp_date->format("H:i A");            $comment_id[$i] = $encrypt_tbl_primary_key_obj->get_encrypted_code($rowData->id);            if (intval($this->u_id) == intval($rowData->user_id)) {                $comment_reply[$i] = FALSE;            } else {                $comment_reply[$i] = TRUE;            }            if ($this->m_gossip_comment_reply->has_reply_by_comment_id($rowData->id)) {                $view_reply[$i] = TRUE;            } else {                $view_reply[$i] = FALSE;            }            $i++;        }        $trait_box = array();        $temp_array = array();        $i = 0;        $j = 0;        $temp_category = "";        foreach ($this->m_trait_users_gossip->get_j_gossip_trait_by_gossip_id($gossip_id) as $rowData) {            if ($temp_category == "") {                $temp_category = $rowData->category;            }            if ($temp_category == $rowData->category) {                $temp_array[$i][0] = $rowData->id;                $temp_array[$i][1] = $rowData->trait_categories_id;                $temp_array[$i][2] = $rowData->category;                $temp_array[$i][3] = $rowData->sub_category_value;                $temp_array[$i][4] = $rowData->sub_category_hidden;                $temp_array[$i][5] = $rowData->sub_category_avg_point;                if (intval($rowData->sub_category_avg_point) < 0) {                    $temp_array[$i][6] = "i_bar_red";                } else {                    $temp_array[$i][6] = $rowData->color_class;                }                $i++;            } else {                $i = 0;                $trait_box[$j++] = $temp_array;                $temp_array = NULL;                $temp_category = $rowData->category;                $temp_array[$i][0] = $rowData->id;                $temp_array[$i][1] = $rowData->trait_categories_id;                $temp_array[$i][2] = $rowData->category;                $temp_array[$i][3] = $rowData->sub_category_value;                $temp_array[$i][4] = $rowData->sub_category_hidden;                $temp_array[$i][5] = $rowData->sub_category_avg_point;                if (intval($rowData->sub_category_avg_point) < 0) {                    $temp_array[$i][6] = "i_bar_red";                } else {                    $temp_array[$i][6] = $rowData->color_class;                }                $i++;            }        }        if ($temp_array != NULL) {            $trait_box[$j++] = $temp_array;        }        $this->pageData['gossip_trait_box'] = $trait_box;        $this->pageData['encrypt_tbl_primary_key_obj'] = $encrypt_tbl_primary_key_obj;        $this->pageData['gossip_id'] = $encrypt_tbl_primary_key_obj->get_encrypted_code($gossip_id);        //First Column Data        $this->pageData['comment_user_inf'] = $comment_user_inf;        $this->pageData['comment_created_date'] = $comment_created_date;        $this->pageData['comment_created_time'] = $comment_created_time;        //Second Column Data        $this->pageData['comment_text'] = $comment_text;        $this->pageData['comment_like'] = $comment_like;        $this->pageData['comment_user_id'] = $comment_user_id;        //Third Column Data        $this->pageData['comment_id'] = $comment_id;        $this->pageData['comment_reply'] = $comment_reply;        $this->pageData['view_reply'] = $view_reply;        $this->load->view("gossip_comment_view", $this->pageData);    }    function get_group_gossip_view() {        $this->load->model('m_group_members');        $this->load->model('m_gossip_main');        include_once(APPPATH . 'controllers/class_file/c_gossip_main.php');        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $userList = $this->input->post('userList');        $c_gossip_main_obj = new c_gossip_main();        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        $group_id = $encrypt_tbl_primary_key_obj->get_plain_text($this->input->post('g_id'));        $user_list = new ArrayObject();        if($userList==false)            $user_list = $this->m_group_members->get_userlist_by_group_id($group_id);        else{            for($i=0;$i<sizeof($userList);$i++){                $data['members_id']=$encrypt_tbl_primary_key_obj->get_plain_text($userList[$i]);                $user_list->append($data);            }        }        $gossip_id = $c_gossip_main_obj->get_group_latest_gossip_id_by_members($user_list);        $this->pageData += $c_gossip_main_obj->get_gossip_row_view_by_target_id("", FALSE, "", "", $gossip_id);        $respond_array['status'] = "true";        $respond_array['element_id'] = "";        $respond_array['msg'] = "Success";        $this->pageData['encrypt_tbl_primary_key_obj'] = $encrypt_tbl_primary_key_obj;        $respond_array['content'] = $this->load->view("gossip_rows_view", $this->pageData, TRUE);        echo json_encode($respond_array);    }    public function hide_gossip() {        $this->load->model('m_gossip_main');        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        $gossip_id = "";        if (isset($_REQUEST['gossip_id']) && $_REQUEST['gossip_id'] != "") {            $gossip_id = $encrypt_tbl_primary_key_obj->get_plain_text($_REQUEST['gossip_id']);        } else {            die();        }        $update_row_data['gossip_hidden'] = 1;        if (!$this->m_gossip_main->is_gossip_target_by_id_target_id($gossip_id, $this->u_id)) {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "You are not allowed to hide this gossip";            echo json_encode($respond_array);            die();        }                if( $this->update_confidence("-")) {            if ($this->m_gossip_main->update_row_data($update_row_data, $gossip_id)) {                $respond_array['status'] = "true";                $respond_array['element_id'] = "";                $respond_array['msg'] = "Gossip Hidden";                $respond_array['thread_value'] = "Gossip Hidden";                $respond_array['comment'] = "Gossip Hidden";                $respond_array['con_score'] = round($this->current_confident, 1);                $respond_array['state'] = 1;                echo json_encode($respond_array);            } else {                $respond_array['status'] = "false";                $respond_array['element_id'] = "";                $respond_array['msg'] = "Server Error";                echo json_encode($respond_array);            }        }        else        {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "You are not allowed to hide this gossip";            echo json_encode($respond_array);            die();        }    }    public function get_gossip_content(){        $this->load->model("m_developer_gossip_relationship");        $this->load->model("m_developer_gossip_insider");        include_once(APPPATH . 'controllers/class_file/c_gossip_main.php');        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        include_once(APPPATH . 'controllers/class_file/c_trait_categories.php');        include_once(APPPATH . 'controllers/class_file/c_information.php');        $c_gossip_main_obj = new c_gossip_main();        $c_trait_categories_obj = new c_trait_categories();        $c_information_obj = new c_information();        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        $this->pageData += $c_gossip_main_obj->get_gossip_row_view_by_target_id($this->u_id);        $this->pageData['category_tree'] = $this->m_trait_categories->get_subcategories_in_categories_tree();        $this->pageData['guest_gossip_reply'] = $c_information_obj->get_inf_for_gossip_reply($this->u_id);        $this->pageData['static_gossip_relationship'] = $this->m_developer_gossip_relationship->get_all();        $this->pageData['static_gossip_insider'] = $this->m_developer_gossip_insider->get_all();        $this->pageData['encrypt_tbl_primary_key_obj'] = $encrypt_tbl_primary_key_obj;        $this->pageData['target_id'] = $encrypt_tbl_primary_key_obj->get_encrypted_code($this->u_id);        $this->pageData['static_traits'] = $c_trait_categories_obj->get_all_trait_box_in_order();        $this->pageData['traits_sub_category'] = $this->m_trait_categories->get_traits_all_order_by_sub_category();        $this->pageData['trait_dynamic_id'] = 0;        // User's Gossip from him/me        $this->pageData += $c_gossip_main_obj->get_gossip_row_view_by_target_id($this->u_id, TRUE);        //User's Gossip Other Required Variable        $this->pageData['static_gossip_relationship'] = $this->m_developer_gossip_relationship->get_all();        $this->pageData['gossip_person'] = $encrypt_tbl_primary_key_obj->get_encrypted_code($this->u_id);        $this->pageData['gossip_for_whom'] = "Me";        $this->pageData['view_make_gossip'] = false;        $this->pageData['encrypt_tbl_primary_key_obj'] = $encrypt_tbl_primary_key_obj;        $this->load->view("gossip/gossip_content_div.php",$this->pageData);    }    public function show_gossip() {        $this->load->model('m_gossip_main');        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $encrypt_tbl_primary_key_obj = new encrypt_tbl_primary_key();        if (isset($_REQUEST['gossip_id']) && $_REQUEST['gossip_id'] != "") {            $gossip_id = $encrypt_tbl_primary_key_obj->get_plain_text($_REQUEST['gossip_id']);        } else {            die();        }        if (!$this->m_gossip_main->is_gossip_target_by_id_target_id($gossip_id, $this->u_id)) {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "You are not allowed to hide this gossip";            echo json_encode($respond_array);            die();        }        $update_row_data['gossip_hidden'] = 0;        if ($this->m_gossip_main->update_row_data($update_row_data, $gossip_id)) {            $respond_array['status'] = "true";            $respond_array['element_id'] = "";            $respond_array['state'] = 0;            $respond_array['msg'] = "Gossip Visible";            foreach ($this->m_gossip_main->get_thread_and_comments_by_id($gossip_id) as $rowData) {                $respond_array['thread_value'] = $rowData->gossip_thread_value;                $respond_array['comment'] = $rowData->gossip_comments;            }            $respond_array['con_check'] = $this->update_confidence("+");            $respond_array['con_score'] = round($this->current_confident,1);            echo json_encode($respond_array);        } else {            $respond_array['status'] = "false";            $respond_array['element_id'] = "";            $respond_array['msg'] = "Server Error";            echo json_encode($respond_array);        }    }    private function update_confidence($sign){        $this->load->model('m_user_trait_final_values');        $col_name="confidence";        $col_val=5;        $temp = $this->m_user_trait_final_values->get_confidence_by_user_id($this->u_id);        if($this->m_user_trait_final_values->change_col_val($this->u_id,$sign,$col_name,$col_val)){            if($this->m_user_trait_final_values->get_confidence_by_user_id($this->u_id)>100)            {                $update_data['confidence']=$temp;                $this->m_user_trait_final_values->update_row_data($this->u_id,$update_data);                return false;            }            if($this->m_user_trait_final_values->get_confidence_by_user_id($this->u_id)<0)            {                $update_data['confidence']=$temp;                $this->m_user_trait_final_values->update_row_data($this->u_id,$update_data);                return false;            }            $this->current_confident=$this->m_user_trait_final_values->get_confidence_by_user_id($this->u_id);            return true;        }else{            return false;        }    }}?>