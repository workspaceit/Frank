<?phpclass c_trait_like extends CI_Controller{    private $id;    private $gossip_id;    private $comment_id;    private $main_comment;    private $liker_id;    private $gossiper_id;    private $point;    private $created_date;    function __construct(){        parent::__construct();        include_once(APPPATH . 'controllers/class_file/time_zone.php');        $this->id = '';        $this->gossip_id = '';        $this->comment_id = '';        $this->main_comment = '';        $this->liker_id = '';        $this->gossiper_id = '';        $this->point = '';        $this->created_date = date('Y-m-d');    }    function set_id($id){        $this->id = $id;    }    function set_gossip_id($gossip_id){        $this->gossip_id = $gossip_id;    }    function set_comment_id($comment_id){        $this->comment_id = $comment_id;    }    function set_main_comment($main_comment){        $this->main_comment = $main_comment;    }    function set_liker_id($liker_id){        $this->liker_id = $liker_id;    }    function set_gossiper_id($gossiper_id){        $this->gossiper_id = $gossiper_id;    }    function set_point($point){        $this->point = $point;    }    function set_created_date($created_date){        $this->created_date = $created_date;    }    function insert_row_data(){        $this->load->model('m_trait_like');        $insert_array_data = array(            'id' => $this->id,            'gossip_id' => $this->gossip_id,            'comment_id' => $this->comment_id,            'main_comment' => $this->main_comment,            'liker_id' => $this->liker_id,            'gossiper_id' => $this->gossiper_id,            'point' => $this->point,            'created_date' => $this->created_date,        );        return $this->m_trait_like->insert_row_data($insert_array_data);    }    function insert_row_and_update_gossip_main(){        $this->load->model('m_trait_like');        //Increase Popularity        $this->load->model('m_user_trait_final_values');        $this->load->model('m_gossip_main');        if ($this->m_trait_like->is_already_liked($this->main_comment, $this->comment_id, $this->liker_id)) {            $update_array_data = array(                'point' => $this->point,                'created_date' => $this->created_date            );            if ($this->m_trait_like->update_row_data($update_array_data, $this->main_comment, $this->comment_id, $this->liker_id)) {            } else {                return false;            }        } else {            $insert_array_data = array(                'gossip_id' => $this->gossip_id,                'comment_id' => $this->comment_id,                'main_comment' => $this->main_comment,                'liker_id' => $this->liker_id,                'gossiper_id' => $this->gossiper_id,                'point' => $this->point,                'created_date' => $this->created_date            );            if ($this->point > 0) {                $target_id = $this->m_gossip_main->get_target_id_by_id($this->gossip_id);                $this->m_user_trait_final_values->increase_popularity($target_id, 0.2);            }            if ($this->m_trait_like->insert_row_data($insert_array_data)) {            } else {                return false;            }        }        // $total point = like + dislike [like positive , dislike negtive]        $points = $this->m_trait_like->get_points_By_comment_id_main_comment($this->comment_id, $this->main_comment);        $total_points = $this->m_trait_like->get_total_row_By_comment_id_main_comment($this->comment_id, $this->main_comment);        //$avg_point = $points * 10 / $total_points;        if (intval($this->main_comment) == 1) {            $this->load->model('m_gossip_main_comments');            $update_data_array = array("avg_like" => $total_points);  //$avg_point            $this->m_gossip_main_comments->update_row_data($update_data_array, $this->comment_id);        } elseif (intval($this->main_comment) == 0) {            $this->load->model('m_gossip_comments');            $update_data_array = array("avg_like" => $total_points);            if ($this->m_gossip_comments->update_row_data($this->comment_id, $update_data_array)) {                return true;            } else {                return false;            }        } elseif (intval($this->main_comment) == 2) {            $this->load->model('m_gossip_comment_reply');            $update_data_array = array("avg_like" => $total_points);            if ($this->m_gossip_comment_reply->update_row_data($this->comment_id, $update_data_array)) {                return true;            } else {                return false;            }        }        return true;    }}