<?php/** * Description of search * * @property CI_DB_active_reocrd $db * * @property m_user_login $m_user_login * @property m_gossip_main $m_gossip_main * @property m_trait_categories $m_trait_categories * @property m_trait_users $m_trait_users * @property m_user_basic_info $m_user_basic_info * @property m_user_profile_data $m_user_profile_data * @property m_user_trait_final_values $m_user_trait_final_values * @property m_search $m_search * */class search extends CI_Controller{    private $u_id;    private $pageData;    private $site_url;    private $sign_in;    private $sign_up;    private $sign_out;    private $search;    private $home;    function __construct()    {        parent::__construct();        $this->load->helper('url');        $this->pageData = array();        include_once(APPPATH . 'controllers/common_site_setting.php');        include_once(APPPATH . 'controllers/class_file/site_url.php');        include_once(APPPATH . 'controllers/class_file/initailize_header_operation.php');        include_once(APPPATH . 'controllers/load_common_properties_of_user.php');        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        $this->sign_in = FALSE;        $this->sign_up = FALSE;        $this->sign_out = TRUE;        $this->search = FALSE;        $this->home = FALSE;        //$this->pageData['myGroupList'] = $this->m_user_group->get_grouplist_by_user_id($this->u_id);    }    function index()    {        $this->search = true;        $this->load->model("m_developer_age");        $this->load->model("m_developer_sign");        $this->load->model("m_developer_gender");        $this->load->model("m_user_basic_info");        $this->load->model("m_trait_categories");        $this->load->model("m_user_trait_final_values");        include_once(APPPATH . 'controllers/class_file/encrypt_tbl_primary_key.php');        include_once(APPPATH . 'controllers/class_file/c_trait_categories.php');        include_once(APPPATH . 'controllers/class_file/c_information.php');        $c_information = new c_information();        $this->pageData["uInf"] = $c_information->get_user_infomation_by_u_id($this->u_id);        $c_trait_categories_obj = new c_trait_categories();        $encryptObj = new encrypt_tbl_primary_key();//         echo "<pre>";//        var_dump($this->pageData["uInf"]);//        die;        $this->pageData['category_tree'] = $this->m_trait_categories->get_subcategories_in_categories_tree();        $this->pageData['trait_final_values'] = $this->m_user_trait_final_values->get_value_by_userid($this->u_id);        $this->pageData['traits_user'] = $c_trait_categories_obj->get_all_trait_box_in_order_by_user_id($this->u_id, true);        $this->pageData['encrypt_tbl_primary_key_obj'] = $encryptObj;        $this->pageData['trait_info'] = $this->m_trait_categories->get_all();        $this->pageData['profile_picture'] = $this->pageData["uInf"]["basic_info_all"][0]->pic_path;        $this->pageData['name'] = $this->pageData["uInf"]["basic_info_all"][0]->f_name.' '.$this->pageData["uInf"]["basic_info_all"][0]->l_name;        $this->pageData['age'] = $this->m_developer_age->get_all();        $this->pageData['sign'] = $this->m_developer_sign->get_all();        $this->pageData['gender'] = $this->m_developer_gender->get_all();        $this->pageData['encryptObj'] = $encryptObj;        $this->load->view('advanced_search_view', $this->pageData);    }    function advance_search()    {        include_once(APPPATH.'controllers/class_file/Profile/C_Aggrigates.php');        $this->load->model('m_developer_sign');        $c_Aggrigates_obj = new C_Aggrigates();        $encryptObj = new encrypt_tbl_primary_key();        $name = trim($this->input->post('name'));        $age = trim($this->input->post('age'));        $sign_id = trim($this->input->post('sign'));        $gender = trim($this->input->post('gender'));        $high_school = trim($this->input->post('high_school'));        $higher_education = trim($this->input->post('higher_education'));        $current_location_country = trim($this->input->post('current_location_country'));        $current_location_state = trim($this->input->post('current_location_state'));        $current_location_city = trim($this->input->post('current_location_city'));        $home_town_country = trim($this->input->post('home_town_country'));        $home_town_state = trim($this->input->post('home_town_state'));        $home_town_city = trim($this->input->post('home_town_city'));        $traits = trim($this->input->post('sub_trait'));        $order = trim($this->input->post('order'));        $serachTraitCategoryId = intval($encryptObj->get_plain_text($traits));        if($order==0){            $order = "asc";            $order= ($serachTraitCategoryId==-1)?"desc":$order;        }elseif($order==1){            $order = "desc";            $order= ($serachTraitCategoryId==-1)?"asc":$order;        }        $sign = "";        if ($sign_id != "") {            $sign = $this->m_developer_sign->get_start_and_end_by_id($sign_id);        }        include_once(APPPATH . 'controllers/class_file/c_search.php');        $c_search_obj = new c_search();        $c_search_obj->set_u_id($this->u_id);        $c_search_obj->set_name($name);        $c_search_obj->set_age($age);        $c_search_obj->set_sign($sign);        $c_search_obj->set_gender($gender);        $c_search_obj->set_high_school($high_school);        $c_search_obj->set_higher_education($higher_education);        $c_search_obj->set_home_town_country($home_town_country);        $c_search_obj->set_home_town_state($home_town_state);        $c_search_obj->set_home_town_city($home_town_city);        $c_search_obj->set_current_location_country($current_location_country);        $c_search_obj->set_current_location_state($current_location_state);        $c_search_obj->set_current_location_city($current_location_city);        $c_search_obj->set_traits($encryptObj->get_plain_text($traits));        $c_search_obj->set_order($order);        $this->pageData['searchTraitId'] = $serachTraitCategoryId;        $this->pageData['search_data'] = $c_search_obj->get_advance_search_data();        $this->pageData['encryptObj'] = $encryptObj;        $this->pageData['c_Aggrigates_obj'] = $c_Aggrigates_obj;        $this->load->view('search_result_view', $this->pageData);    }    public function search_compare()    {        $this->load->model('m_search');        $this->load->model('m_trait_categories');        $this->load->model('m_gossip_main');        include_once(APPPATH.'controllers/class_file/Profile/C_Aggrigates.php');        $this->search = true;        $encryptObj = new encrypt_tbl_primary_key();        $name = $this->input->post('name');        $age = $this->input->post('age');        $sign = $this->input->post('sign');        $gender = $this->input->post('gender');        $high_school = $this->input->post('high_school');        $higher_education = $this->input->post('higher_education');        $current_location_country = $this->input->post('current_location_country');        $current_location_state = $this->input->post('current_location_state');        $current_location_city = $this->input->post('current_location_city');        $home_town_country = $this->input->post('home_town_country');        $home_town_state = $this->input->post('home_town_state');        $home_town_city = $this->input->post('home_town_city');        $sub_trait = $encryptObj->get_plain_text($this->input->post('sub_trait'));        //$sub_trait_encrypt = $this->input->post('sub_trait');        $order_by = $this->input->post('order_by');        $serchQuery['name'] = $name;        $serchQuery['age'] = $age;        $serchQuery['sign'] = $sign;        $serchQuery['gender'] = $gender;        $serchQuery['high_school'] = $high_school;        $serchQuery['higher_education'] = $higher_education;        $serchQuery['current_location_country'] = $current_location_country;        $serchQuery['current_location_state'] = $current_location_state;        $serchQuery['current_location_city'] = $current_location_city;        $serchQuery['home_town_country'] = $home_town_country;        $serchQuery['home_town_state'] = $home_town_state;        $serchQuery['home_town_city'] = $home_town_city;        $serchQuery['sub_trait'] = $sub_trait;        $serchQuery['order_by'] = $order_by;        //$this->pageData['searchQuery'] = $serchQuery;        $userList = array();        $userlist = $this->input->post('user_id');        if (!empty($userlist)):            foreach ($userlist as $key => $userID) {                $userList[$key] = $encryptObj->get_plain_text($userID);            }            $serchQuery['userList'] = $userList;        else:            redirect('search');        endif;        $this->session->unset_userdata('searchString');        $this->session->set_userdata('searchString',$serchQuery);//array('searchString' => $serchQuery));        $this->pageData['category_tree'] = $this->m_trait_categories->get_subcategories_in_categories_tree();        $this->pageData['groupTraitListAvg'] = $this->m_search->get_traitlist_avg_by_userlist($userList);        $this->pageData['groupDemoName'] = 'New Group';        $this->pageData['total_member'] = count($userList);        $this->pageData['encryptObj'] = $encryptObj;        $this->pageData['groupTotalstatus'] = $this->m_search->get_userlist_total_status($userList);        $this->pageData['groupTotalGossipfor'] = $this->m_gossip_main->get_total_gossipfor_by_userlist($userList);        $this->pageData['groupTotalGossipfrom'] = $this->m_gossip_main->get_total_gossipfrom_by_userlist($userList);        $this->pageData['groupTotalGossip'] = $this->m_gossip_main->get_total_gossips_by_userlist($userList);        $this->pageData['top3populer'] = $this->m_search->get_group_top3_populer_by_userlist($userList);        $this->pageData['top2finest'] = $this->m_search->get_group_top2_finest_by_userlist($userList);        $this->pageData['userTraitInfo'] = $this->m_search->get_group_comparison_by_userlist_and_trait($userList, $sub_trait);        $this->pageData['latestMember'] = $this->m_search->get_latest_member_from_userlist($userList);        //$this->pageData['highestTraitMember'] = $this->m_search->get_highest_trait_member_from_userlist($userList,$sub_trait);        $c_Aggrigates_obj = new C_Aggrigates();        $this->pageData['c_Aggrigates_obj'] = $c_Aggrigates_obj;        $this->pageData['trait_info'] = $this->m_trait_categories->get_all();        $this->pageData['selected_trait'] = $sub_trait;        $this->load->view('group_comparisons', $this->pageData);    }    public function get_group_highest_traituser()    {        include_once(APPPATH.'controllers/class_file/Profile/C_Aggrigates.php');        $this->load->model('m_search');        $this->load->model('m_trait_categories');        $encryptObj = new encrypt_tbl_primary_key();        $trait_id = $encryptObj->get_plain_text($this->input->post('sub_trait'));        $userlist = $this->input->post('user_id');        if (!empty($userlist)):            foreach ($userlist as $key => $userID) {                $userList[$key] = $encryptObj->get_plain_text($userID);            }        endif;        $c_Aggrigates_obj = new C_Aggrigates();        $this->pageData['c_Aggrigates_obj'] = $c_Aggrigates_obj;        $this->pageData['encryptObj'] = $encryptObj;        $this->pageData['highestTraitMember'] = $this->m_search->get_highest_trait_member_from_userlist($userList, $trait_id);        echo $this->load->view('search_groupuser_highest_trait', $this->pageData, true);    }    public function get_memberinfo_by_trait()    {        $isMemberGroup = intval($this->input->post('isMemberGroup'));        $offSet = intval($this->input->post('offset'));        include_once(APPPATH.'controllers/class_file/Profile/C_Aggrigates.php');        $this->load->model('m_search');        $this->load->model('m_trait_categories');        $encryptObj = new encrypt_tbl_primary_key();        $trait_id = $encryptObj->get_plain_text($this->input->post('sub_trait'));        $order = $this->input->post('order');        $userlist = $this->input->post('user_id');        if (!empty($userlist)):            foreach ($userlist as $key => $userID) {                $userList[$key] = $encryptObj->get_plain_text($userID);            }        endif;        $orderBy = ($order == 1) ? 'DESC' : 'ASC';        if($trait_id==-1){            $orderBy = ($order == 1) ? 'ASC':'DESC';        }        $c_Aggrigates_obj = new C_Aggrigates();        if($offSet>0){            $this->m_search->offset =0;            $this->m_search->limit = $offSet*20;        }        $this->pageData['c_Aggrigates_obj'] = $c_Aggrigates_obj;        $this->pageData['isMemberGroup'] =$isMemberGroup;        $this->pageData['encryptObj'] = $encryptObj;        $this->pageData['userTraitInfo'] = $this->m_search->get_group_comparison_by_userlist_and_trait($userList, $trait_id, $orderBy);        $this->pageData['trait_id_value'] = $trait_id;        echo $this->load->view('search_user_traitinfo', $this->pageData, true);    }    public function get_memberinfo_by_searchname()    {        $this->load->model('m_search');        $this->load->model('m_trait_categories');        $encryptObj = new encrypt_tbl_primary_key();        $serch_name = $this->input->post('search_name');        $userlist = $this->input->post('user_id');        if (!empty($userlist)):            foreach ($userlist as $key => $userID) {                $userList[$key] = $encryptObj->get_plain_text($userID);            }        endif;        $this->pageData['encryptObj'] = $encryptObj;        $this->pageData['user_info'] = $this->m_search->get_userinfo_by_search_name_form_userlist($userList, $serch_name);        $this->load->view('search_group_userinfo', $this->pageData);    }    /**     * @property m_user_group $m_user_group     */    public function create_group()    {        $this->load->model('m_user_group');        $this->load->model('m_group_members');        $this->load->model('m_group_search_string');        //echo $this->u_id;die();        $group_name = $this->input->post('group_name');        if (!$this->m_user_group->check_groupname_by_userid($this->u_id, $group_name)) {            $groupInfo = array('creator_id' => $this->u_id, 'name' => $group_name, 'created_date' => date('Y-m-d H:i:s'));            $group_id = $this->m_user_group->insert_row_data($groupInfo);            //echo $group_id; die();            $sessionSearchString = $this->session->userdata('searchString');            $userList = $sessionSearchString['userList'];            foreach ($userList as $key => $user_id) {                $addMember = array('user_group_id' => $group_id, 'members_id' => $user_id, 'create_date' => date('Y-m-d H:i:s'));                $this->m_group_members->insert_row_data($addMember);            }            if (!empty($sessionSearchString['name'])) {                $serchQuery['name'] = $sessionSearchString['name'];            }            if (!empty($sessionSearchString['age'])) {                $serchQuery['age'] = $sessionSearchString['age'];            }            if (!empty($sessionSearchString['sign'])) {                $serchQuery['sign'] = $sessionSearchString['sign'];            }            if (!empty($sessionSearchString['gender'])) {                $serchQuery['gender'] = $sessionSearchString['gender'];            }            if (!empty($sessionSearchString['high_school'])) {                $serchQuery['high_school'] = $sessionSearchString['high_school'];            }            if (!empty($sessionSearchString['higher_education'])) {                $serchQuery['higher_education'] = $sessionSearchString['higher_education'];            }            if (!empty($sessionSearchString['current_location_country'])) {                $serchQuery['current_location_country'] = $sessionSearchString['current_location_country'];            }            if (!empty($sessionSearchString['current_location_state'])) {                $serchQuery['current_location_state'] = $sessionSearchString['current_location_state'];            }            if (!empty($sessionSearchString['current_location_city'])) {                $serchQuery['current_location_city'] = $sessionSearchString['current_location_city'];            }            if (!empty($sessionSearchString['home_town_country'])) {                $serchQuery['home_town_country'] = $sessionSearchString['home_town_country'];            }            if (!empty($sessionSearchString['home_town_state'])) {                $serchQuery['home_town_state'] = $sessionSearchString['home_town_state'];            }            if (!empty($sessionSearchString['home_town_city'])) {                $serchQuery['home_town_city'] = $sessionSearchString['home_town_city'];            }            if (!empty($sessionSearchString['sub_trait'])) {                $serchQuery['trait'] = $sessionSearchString['sub_trait'];            }            if (!empty($sessionSearchString['order_by'])) {                $serchQuery['order_by'] = $sessionSearchString['order_by'];            }            $serchQuery['user_id'] = $this->u_id;            $serchQuery['user_group_id'] = $group_id;            $this->m_group_search_string->insert_row_data($serchQuery);            echo '1';        } else {            echo 'group exists';        }    }    function get_graphday_datalist()    {        $this->load->model('m_graph_frequency_day');        $encryptObj = new encrypt_tbl_primary_key();        $contentData = array();        $traidId = $this->input->post('sub_trait');        $trait_id = $encryptObj->get_plain_text($traidId);        $graphData = $this->m_graph_frequency_day->get_graph_frequency_day_by_cat_and_date($trait_id, date('Y-m-d'));        if (!empty($graphData)) {            $contentData['reply'] = 1;            $contentData['graphData'] = $graphData;        } else {            $contentData['reply'] = 0;        }        echo json_encode($contentData);    }    public function get_graphyear_datalist()    {        $this->load->model('m_graph_frequency_year');        $encryptObj = new encrypt_tbl_primary_key();        $contentData = array();        $traidId = $this->input->post('sub_trait');        $trait_id = $encryptObj->get_plain_text($traidId);        $graphData = $this->m_graph_frequency_year->get_graph_frequency_day_by_cat_and_year($trait_id, date('Y'));        if (!empty($graphData)) {            $contentData['reply'] = 1;            $contentData['graphData'] = $graphData;        } else {            $contentData['reply'] = 0;        }        echo json_encode($contentData);    }}