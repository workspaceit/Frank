<?php	 class trait_users extends CI_Controller{		private $u_id;                private $gender;                private $pageData;                private $site_url;                private $sign_in;                private $sign_up;                private $sign_out;                private $search;                private $home;              private $trait_categories_id;                function __construct(){                      parent::__construct();                      $this->load->helper('url');                      $this->pageData=array();                      include_once(APPPATH.'controllers/common_site_setting.php');                      include_once(APPPATH.'controllers/class_file/site_url.php');                      include_once(APPPATH.'controllers/class_file/initailize_header_operation.php');                      include_once(APPPATH.'controllers/load_common_properties_of_user_for_ajax_request_json.php');                       $this->sign_in=FALSE;                       $this->sign_up=FALSE;                       $this->sign_out=TRUE;                       $this->search=FALSE;                       $this->home=FALSE;                    $this->trait_categories_id='';                }		 function index(){						 include_once(APPPATH.'controllers/class_file/c_trait_users.php');			 $c_trait_users_obj=new c_trait_users.php;			//$id=trim($this->input->post('id'));			//$user_id=trim($this->input->post('user_id'));			//$trait_categories_id=trim($this->input->post('trait_categories_id'));			//$category=trim($this->input->post('category'));			//$sub_category_value=trim($this->input->post('sub_category_value'));			//$sub_category_hidden=trim($this->input->post('sub_category_hidden'));			//$sub_category_avg_point=trim($this->input->post('sub_category_avg_point'));			//$created_date=trim($this->input->post('created_date'));			$id='';			$user_id='';			$trait_categories_id='';			$category='';			$sub_category_value='';			$sub_category_hidden='';			$sub_category_avg_point='';			$created_date='';			$c_trait_users_obj->set_id($trait_users);			$c_trait_users_obj->set_user_id($trait_users);			$c_trait_users_obj->set_trait_categories_id($trait_users);			$c_trait_users_obj->set_category($trait_users);			$c_trait_users_obj->set_sub_category_value($trait_users);			$c_trait_users_obj->set_sub_category_hidden($trait_users);			$c_trait_users_obj->set_sub_category_avg_point($trait_users);			$c_trait_users_obj->set_created_date($trait_users);			if($c_trait_users_obj->insert_row_data()){				echo ';True;';			}else{				echo ';False;';			}		 }                 function change_sub_category_hidden(){                        $this->load->model('m_trait_users');                        $this->load->model('m_user_trait_final_values');                        include_once(APPPATH.'controllers/class_file/encrypt_tbl_primary_key.php');                        include_once(APPPATH.'controllers/class_file/c_trait_users.php');			$encrypt_tbl_primary_key_obj=new encrypt_tbl_primary_key();                        $c_trait_users_obj=new c_trait_users();			$user_id=$this->u_id;                        $trait_categories_id=$encrypt_tbl_primary_key_obj->get_plain_text(trim($this->input->post('trait_categories_id')));			$c_trait_users_obj->set_user_id($user_id);                        $c_trait_users_obj->set_trait_categories_id($trait_categories_id);                        $resp=$c_trait_users_obj->change_sub_category_hidden();                        if($resp>=0){                            $sign="";                            $respond_array['status']="true";                            if($resp==1){                                $sign="-";                                $respond_array['msg']="Hidden";                            }elseif($resp==0){                                $respond_array['msg']="Visible";                                $sign="+";                            }                            $respond_array['operation']=$resp;                            $confidence_val=$this->get_confidence_value($this->get_percentage_value($c_trait_users_obj->get_trait_count()));                                                                                $col_name="confidence";                            $col_val=round(abs($confidence_val),2);                                                       $current_confidence_val=$this->m_user_trait_final_values->get_confidence_by_user_id($this->u_id);                            if($sign=="+"){                                $new_confident_val=floatval($current_confidence_val) + 10;                            }elseif($sign=="-"){                                $new_confident_val=floatval($current_confidence_val) - 10;                            }                                                        if($new_confident_val<0 || $new_confident_val>100 ){                                if($new_confident_val<0){                                    $new_confident_val=0;                                    $update_data_array=array('sub_category_hidden'=>0);                                    $this->m_trait_users->update_row_data($c_trait_users_obj->get_user_id(),$c_trait_users_obj->get_trait_categories_id(),$update_data_array);                                    $respond_array['status']="false";                                    $respond_array['msg']="You are not allowed to hide this trait";                                    $respond_array['operation']=$resp;                                    echo json_encode($respond_array);                                    die();                                }else{                                    $new_confident_val=100;                                }                            }                            unset($c_trait_users_obj);                            $update_data['confidence']=$new_confident_val;                            if($this->m_user_trait_final_values->update_row_data($this->u_id,$update_data)){                                $current_confidence_val=$this->m_user_trait_final_values->get_confidence_by_user_id($this->u_id);                               // return true;                            }else{                              //  return false;                            }                     //       $current_confidence_val=$this->update_confidence($sign,$confidence_val);                            $respond_array['score']=round($current_confidence_val,1);                            $respond_array['element_id']="#user_stats_confidence";                            echo json_encode($respond_array);                        }else{                            $respond_array['status']="false";                            $respond_array['msg']="Server Error";                            $respond_array['operation']=$resp;                            echo json_encode($respond_array);                        }                                         }                private function get_percentage_value($total_traits,$c=1){                                        $percentage=(float)((100*$c)/$total_traits); // 8 User Infoamtion                     return $percentage;                }                private function get_confidence_value($val=1){                    // 50% Average Trait goes in confidence                    $confidence_val=(float)(($val*50)/100);                    return $confidence_val;                }	 }?>